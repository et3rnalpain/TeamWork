Что такое динамическая память в C/C++?
1) Память, выделяемая во время исполнения программы
2) Память, выделяемая при компиляции программы
3) Память, выделенная компьютером по умолчанию
4) Память, выделенная для статических переменных
1
Какую функцию нужно использовать для выделения динамической памяти в C?
1) new
2) allocate
3) malloc
4) create
3
Какой оператор используется для выделения динамической памяти в языке C++?
1) new
2) malloc()
3) calloc()
4) free()
1
Какую функцию нужно использовать для освобождения динамической памяти в C?
1) release
2) deallocate
3) free
4) destroy
3
Какой оператор используется для освобождения динамической памяти в языке C++?
1) new
2) malloc()
3) calloc()
4) delete
4
Как выделить память под массив в C с помощью функции malloc?
1) int* arr = malloc(sizeof(int));
2) int* arr = malloc(sizeof(int)*10);
3) int* arr = malloc(sizeof(int) + 10);
4) int* arr = malloc(sizeof(arr));
2
Как освободить память, выделенную под массив в C с помощью функции free?
1) free(arr);
2) free(sizeof(arr));
3) free(arr, sizeof(int)*10);
4) free(sizeof(*arr));
1
Какая функция используется для выделения памяти под объект в C++?
1) allocate
2) create
3) new
4) construct
3
Что произойдет, если не освободить выделенную динамическую память после использования?
1) Программа не скомпилируется
2) Программа будет работать непредсказуемо
3) Выделенная память автоматически освободится после окончания программы
4) Выделенная память будет возвращена операционной системе
2
Как освободить память, выделенную под двухмерный массив в C с помощью функции free?
1) free(arr);
2) free(sizeof(arr));
3) free(arr, sizeof(int*)*10);
4) free(sizeof(*arr));
1
Как выделить память под объекты в массиве в C++ с помощью функции new?
1) int* arr = new int(10);
2) int* arr = new int[10];
3) int** arr = new int*[10];
4) int** arr = new int[10][10];
2
Как освободить память, выделенную под массив объектов в C++ с помощью функции delete []?
1) delete(arr);
2) delete(sizeof(arr));
3) delete [] arr;
4) delete arr[];
3
Можно ли изменить размер выделенной динамической памяти в C?
1) Да, с помощью функции realloc
2) Нет, размер выделенной памяти остается неизменным
3) Да, с помощью функции resize
4) Нет, это невозможно
1
Что произойдет, если попытаться освободить уже освобожденную память в C/C++?
1) Программа не скомпилируется
2) Программа завершится аварийно
3) Ничего не произойдет
4) Выделенная память будет сброшена в ноль
2
Как проверить, успешно ли выделена динамическая память в C/C++?
1) Нужно присвоить указатель на NULL
2) Нужно проверить, что указатель не равен NULL
3) Нужно вызвать функцию malloc проверки памяти
4) Нужно вызвать функцию free для проверки памяти
2
Что является причиной утечек памяти в программе?
1) Неправильное использование указателей
2) Неправильное использование статических переменных
3) Неправильное использование оператора switch
4) Неправильное использование оператора for
1
Как обнаружить утечки памяти в программе?
1) Ручным анализом кода
2) С использованием специальных инструментов
3) Фиксированием ошибок во время выполнения программы
4) Они не могут быть обнаружены
2
Как использовать выделенную динамическую память?
1) Обращаться к ней по имени переменной
2) Обращаться к ней по адресу, указанному в указателе
3) Использовать специальную функцию getmem()
4) Выделенная память используется автоматически
2
Как проверить, освобождена ли уже динамическая память?
1) Проверка значения указателя на NULL
2) Использование функции checkmem()
3) Использование специального оператора clear()
4) Необходимо произвести дополнительные проверки
2
Почему динамическая память может быть опасна?
1) Она может быть неосвобожденной
2) Она может быть переполнена
3) Она может быть повреждена из-за ошибок программиста
4) Все вышеперечисленное
4
Какие возможности предоставляет динамическая память в сравнении со статической?
1) Позволяет выделять память по мере необходимости
2) Позволяет возвращать ненужную память системе
3) Позволяет быстрее работать с большими объемами данных
4) Все вышеперечисленное
4
Какой тип ошибок могут произойти при работе с динамической памятью?
1) Ошибки сегментации
2) Ошибки времени компиляции
3) Ошибки времени исполнения
4) Никаких ошибок быть не может
3
Как проверить, освобождена ли уже динамическая память?
1) Проверка значения указателя на NULL
2) Использование функции checkmem()
3) Использование специального оператора clear()
4) Необходимо произвести дополнительные проверки
4
Что такое фрагментация памяти в динамической памяти?
1) Процесс сокращения размера выделенной памяти
2) Процесс увеличения размера выделенной памяти
3) Разбиение памяти на несколько непрерывных блоков
4) Термин, используемый только в языке С#
3
Что такое выравнивание в динамической памяти?
1) Процесс заполнения выделенной памяти нулевыми байтами
2) Процесс увеличения размера выделенной памяти для обеспечения выравнивания в стеке
3) Свойство, которое гарантирует, что объект будет иметь размер, кратный определенному числу байтов
4) Процесс определения размера выделенной памяти с помощью специальных функций
3
Что такое указатель на объект в динамической памяти?
1) Переменная, которая хранит адрес объекта в динамической памяти
2) Переменная, которая хранит значение самого объекта
3) Переменная, которая хранит размер объекта в памяти
4) Переменная, которая хранит тип объекта в памяти
1
Какие проблемы могут возникать при работе с динамической памятью?
1) Утечка памяти
2) Недостаток памяти
3) Невозможность освободить память
4) Все перечисленные выше
4
Какие операции могут быть выполнены с объектами, хранящимися в динамической памяти?
1) Только чтение
2) Только запись
3) Чтение и запись
4) Только создание
3
Какие типы данных могут храниться в динамической памяти?
1) Только простые типы данных
2) Только массивы
3) Любые типы данных
4) Только структуры данных
3
Как называется процесс выделения динамической памяти?
1) Аллокация
2) Резервирование
3) Выделение
4) Размещение
1

