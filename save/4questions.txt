Что такое рекурсия в языке программирования?
1) Способ объединения функций в одну
2) Способ создания циклов в программе
3) Способ вызова функции из неё самой
4) Способ создания параллельных потоков выполнения.
3
Как объявить рекурсивную функцию в C++?
1) voidRecursiveFunction()
2) int RecursiveFunction()
3) void RecursiveFunction()
4) float RecursiveFunction(float x)
3
Что такое базовый случай в рекурсии?
1) Случай, когда функция вызывает сама себя
2) Случай, когда функция не вызывает себя
3) Случай, когда функция вызывает другую функцию
4) Случай, когда функция имеет только один аргумент
2
Сколько раз функция factorial будет вызвана при выполнении следующего кода: factorial(5)?
1) 5
2) 10
3) 15
4) 120
2
Как реализовать функцию рекурсивного вычисления n-го числа Фибоначчи?
1) Использовать три цикла
2) Вызывать функцию рекурсивно с уменьшением аргумента на 2
3) Вызывать функцию рекурсивно с уменьшением аргумента на 1 и на 2
4) Использовать только один цикл
3
Что происходит при переполнении стека в рекурсии?
1) Программа завершается с ошибкой
2) Программа пропускает выполнение рекурсии
3) Программа получает доступ к дополнительному стеку
4) Программа продолжает работу, но снижается производительность
1
Какая функция используется для получения текущей глубины рекурсии?
1) int get_recursion_depth()
2) int __func_depth()
3) int __func_recursion_depth()
4) Нет такой функции
4
Что такое бесконечная рекурсия?
1) Рекурсия, которая приводит к зацикливанию
2) Рекурсия, которая не вызывает сама себя
3) Рекурсия, которая вызывает другую функцию
4) Рекурсия, которая имеет только один аргумент
1
Какой модификатор доступа нужно использовать для функции, чтобы она была доступна только внутри другой функции?
1) private
2) protected
3) public
4) Не нужно использовать модификатор доступа
4
Какое значение вернет функция, если на вход ей будет подан отрицательный аргумент?
1) Ошибка компиляции
2) Бесконечный цикл
3) Ошибка выполнения
4) Нет верного ответа
4
Какой код рекурсивной функции вычисления суммы элементов массива?
1) int sum(int[] arr, int size) { return arr[size] + sum(arr, size-1) }
2) int sum(int[] arr, int index) { return arr[index] + sum(arr, index+1) }
3) int sum(int[] arr, int index) { return arr[index] + sum(arr, index-1) }
4) int sum(int[] arr, int size) { return arr[size] + sum(arr, size+1) }
2
Как использовать рекурсию для обхода дерева?
1) Использовать только циклы
2) Обработать корень дерева, затем обойти левое поддерево, затем правое поддерево рекурсивным вызовом функции
3) Обойти левое поддерево, затем правое поддерево, затем обработать корень дерева рекурсивным вызовом функции
4) Обойти правое поддерево, затем левое поддерево, затем обработать корень дерева рекурсивным вызовом функции
3
Как в C++ реализовать рекурсивное вычисление факториала с помощью шаблона функции?
1) template <int N> int factorial() { return N * factorial<N-1>() }
2) template <int N> int factorial() { return N * factorial<N+1>() }
3) template <int N> int factorial() { return N * factorial<N-2>() }
4) template <int N> int factorial() { return N * factorial<N+2>() }
1
Что такое хвостовая рекурсия?
1) Рекурсия, при которой вызов функции происходит внутри тела цикла
2) Рекурсия, при которой вызов функции происходит внутри тела другой функции
3) Рекурсия, при которой все вызовы функции происходят в конце тела функции
4) Рекурсия, при которой все вызовы функции происходят в начале тела функции
3
Каково максимальное количество вызовов рекурсивной функции в C++?
1) Нет ограничения
2) Ограничено только памятью
3) Ограничено некоторым числом (обычно несколькими тысячами)
4) Ограничено размером стека
4
Как называется функция, которая вызывает саму себя?
1) Декурсия
2) Рекурсия
3) Итерация
4) Цикл  
2
Как называется точка, в которой рекурсивная функция останавливается?
1) Точка выхода
2) Точка входа
3) Точка возврата
4) Точка останова
1
Какая библиотека используется в языке C++ для работы с рекурсией?
1) <stdio.h>
2) <stdlib.h>
3) <cstring>
4) <iostream>
4
Какой оператор используется в функции, чтобы вызвать её саму себя?
1) for
2) do-while
3) switch
4) if
4
В каком случае для использования рекурсии нужно быть осторожным?
1) Когда функция используется для поиска в ширину
2) Когда функция используется для поиска в глубину
3) Когда рекурсия может привести к переполнению стека
4) Когда рекурсия может привести к бесконечному циклу
3
Какова основная идея рекурсивного алгоритма?
1) Использование циклов
2) Использование условных операторов
3) Разделение проблемы на меньшие подзадачи
4) Создание новых процессов
3
Что такое "рекурсивный случай" в рекурсивной функции?
1) Случай, когда функция вызывается сама себя с меньшим или модифицированным аргументом
2) Случай, когда функция вызывается сама себя с исходными аргументами
3) Случай, когда функция выполняется без вызова самой себя
4) Случай, когда функция завершается
1
Какие две основных операции выполняет любой рекурсивный алгоритм? 
1) сравнение и вычитание 
2) сложение и вычитание 
3) умножение и деление 
4) вызов функции и проверка условия
4
Что произойдет, если рекурсия не имеет условия выхода? 
1) программа закроется автоматически 
2) возникнет бесконечный цикл 
3) программа выдаст ошибку компиляции 
4) все переменные обнулятся
2
Что такое «стек» в контексте рекурсии? 
1) структура данных 
2) область памяти, где хранятся значения переменных 
3) определенный способ вызова функций в рекурсии 
4) программа, использующая рекурсию
2
Как заранее обеспечить безопасность при использовании рекурсии? 
1) не использовать рекурсию 
2) использовать только рекурсивные функции из стандартной библиотеки 
3) ограничить максимальную глубину рекурсии 
4) объявить все функции как статические
3
акой алгоритм обычно используется для рекурсивной функции?
1) сортировка пузырьком
2) бинарный поиск
3) сортировка Шелла
4) разделение на части
4
Когда можно использовать рекурсию вместо цикла?
1) если требуется повторение действий
2) если требуется поиск в глубину
3) если требуется считать данные
4) если требуется хранить данные
2
Какой пример можно сказать, используя рекурсию?
1) вычисление факториала числа
2) вывод на экран текста
3) сортировка массива
4) создание переменных
1
Как можно остановить рекурсию?
1) написать условие выхода из рекурсии
2) закрыть программу
3) удалить функцию
4) уменьшить глубину рекурсии
1
